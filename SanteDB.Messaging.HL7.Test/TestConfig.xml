<?xml version="1.0" encoding="utf-8" ?>
<!--
 - Copyright 2021-2023 SanteSuite Contributors (See NOTICE.md for full copyright notices)
 - Copyright (C) 2019 - 2021, Fyfe Software Inc. and the SanteSuite Contributors
 - Portions Copyright (C) 2015-2018 Mohawk College of Applied Arts and Technology
 -
 - Licensed under the Apache License, Version 2.0 (the "License"); you
 - may not use this file except in compliance with the License. You may
 - obtain a copy of the License at
 -
 - http://www.apache.org/licenses/LICENSE-2.0
 -
 - Unless required by applicable law or agreed to in writing, software
 - distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 - WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 - License for the specific language governing permissions and limitations under
 - the License.
 -
 - User: fyfej
 - Date: 2023-3-10
 -->
<SanteDBConfiguration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.10.0.23074" xmlns="http://santedb.org/configuration">
  <sections>
    <add type="SanteDB.Caching.Memory.Configuration.MemoryCacheConfigurationSection, SanteDB.Caching.Memory" />
    <add type="SanteDB.Core.Configuration.ApplicationServiceContextConfigurationSection, SanteDB.Core.Api" />
    <add type="SanteDB.Core.Configuration.DiagnosticsConfigurationSection, SanteDB.Core.Api" />
    <add type="SanteDB.Core.Configuration.AuditAccountabilityConfigurationSection, SanteDB.Core.Api, Version=2.0.0.0" />
    <add type="SanteDB.Messaging.HL7.Configuration.Hl7ConfigurationSection, SanteDB.Messaging.HL7" />
    <add type="SanteDB.Persistence.Data.Configuration.AdoPersistenceConfigurationSection, SanteDB.Persistence.Data" />
    <add type="SanteDB.OrmLite.Configuration.OrmConfigurationSection, SanteDB.OrmLite" />
    <add type="SanteDB.Core.Configuration.Data.DataConfigurationSection, SanteDB.Core.Api, Version=1.11.0.29460, Culture=neutral, PublicKeyToken=null" />
    <add type="SanteDB.Core.Configuration.ResourceManagementConfigurationSection, SanteDB.Core.Api" />
    <add type="SanteDB.Core.Security.Configuration.SecurityConfigurationSection, SanteDB.Core.Api" />
  </sections>
  <section xsi:type="DataConfigurationSection">
    <connectionStrings>
      <add name="TEST_CONNECTION" value="Data Source=|DataDirectory|\santedb_test.sqlite;" provider="sqlite" />
    </connectionStrings>
  </section>
  <section xsi:type="OrmConfigurationSection">
    <providers>
      <add type="SanteDB.OrmLite.Providers.Firebird.FirebirdSQLProvider, SanteDB.OrmLite" invariant="FirebirdSQL" />
      <add type="SanteDB.OrmLite.Providers.Sqlite.SqliteProvider, SanteDB.OrmLite" invariant="sqlite" />
    </providers>
    <dbProviderFactories>
      <add name="SQLite Data Provider" invariant="sqlite" description=".Net Framework Data Provider for SQLite" type="Microsoft.Data.Sqlite.SqliteFactory, Microsoft.Data.Sqlite" />
      <add name="PostgreSQL Data Provider" invariant="Npgsql" description=".Net Framework Data Provider for PostgreSQL" type="Npgsql.NpgsqlFactory, Npgsql, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7" />
      <add name="Firebird Data Provider" invariant="FirebirdSQL" description="Firebird" type="FirebirdSql.Data.FirebirdClient.FirebirdClientFactory, FirebirdSql.Data.FirebirdClient, Culture=neutral, PublicKeyToken=3750abcc3150b00c" />
    </dbProviderFactories>
  </section>
  <!-- Represents this server's internal security configuration -->
  <section xsi:type="SecurityConfigurationSection" passwordRegex="^(?=.*\d){1,}(?=.*[a-z]){1,}(?=.*[A-Z]){1,}(?=.*[^\w\d]){1,}.{6,}$" allowUnsignedApplets="true">
    <!-- Sets the thumbprints of publishers that should be trusted to run code-->
    <trustedPublishers>
      <add>84BD51F0584A1F708D604CF0B8074A68D3BEB973</add>
    </trustedPublishers>
    <!-- SanteDB signs a lot of data when communicating it, this is used for configuring how this server signs data -->
    <signing alg="hmac" hmacKey="uuNQ0pAkW+M2uxHjK1pisFZBFYjvkgveJcGtDy2E8i8=" />
    <!-- To Configure X509 Signatures -->
    <!--<signing alg="rsa" findType="FindByThumbprint" storeName="My" storeLocation="CurrentUser" findValue="value" />-->
  </section>
  <section xsi:type="Hl7ConfigurationSection" security="Sft4" noAuthSecret="APPLICATIONSECRET">
    <!-- Classes of PLACE which can be used for a Birthplace Lookup -->
    <birthplaceClasses>
      <add>79DD4F75-68E8-4722-A7F5-8BC2E08F5CD6</add>
      <add>48B2FFB3-07DB-47BA-AD73-FC8FB8502471</add>
      <add>D9489D56-DDAC-4596-B5C6-8F41D73D8DC5</add>
      <add>FF34DFA7-C6D3-4F8B-BC9F-14BCDC13BA6C</add>
      <add>8CF4B0B0-84E5-4122-85FE-6AFA8240C218</add>
    </birthplaceClasses>
    <!-- The authority of your UUIDs -->
    <localAuthority>
      <domainName xmlns="http://santedb.org/model">KEY</domainName>
      <oid xmlns="http://santedb.org/model">1.3.6.1.4.1.52820.5.1.1.1.999</oid>
      <url xmlns="http://santedb.org/model">http://your/fhir/authority</url>
    </localAuthority>
    <!-- The SSN Authority from PID segment (map to PID-3) -->
    <ssnAuthority>
      <domainName xmlns="http://santedb.org/model">SSN</domainName>
      <oid xmlns="http://santedb.org/model">2.16.840.1.113883.4.1</oid>
      <url xmlns="http://santedb.org/model">http://hl7.org/fhir/sid/us-ssn</url>
    </ssnAuthority>
    <facility>44746968-AB60-4190-867C-05335014F7C5</facility>
    <services>
      <add address="llp://0.0.0.0:2100" name="LLP" receiveTimeout="20000">
        <!-- If you want to enable security Encryption
        <sllp checkCrl="false" requireClientCert="false">
          <serverCertificate findType="FindByThumbprint" storeName="My" storeLocation="CurrentUser" findValue="value" />
          <clientAuthorityCertificate findType="FindByThumbprint" storeName="My" storeLocation="CurrentUser" findValue="value" />
        </sllp>
        -->
        <messages>
          <add type="SanteDB.Messaging.HL7.Messages.QbpMessageHandler, SanteDB.Messaging.HL7">
            <event isQuery="true" name="QBP^Q22" />
            <event isQuery="true" name="QBP^Q23" />
          </add>
          <add type="SanteDB.Messaging.HL7.Messages.AdtMessageHandler, SanteDB.Messaging.HL7">
            <event isQuery="false" name="ADT^A01" />
            <event isQuery="false" name="ADT^A04" />
            <event isQuery="false" name="ADT^A08" />
            <event isQuery="false" name="ADT^A40" />
          </add>
        </messages>
      </add>
    </services>
  </section>
  <section xsi:type="ResourceManagementConfigurationSection">
    <resources>
      <add type="Patient" />
    </resources>
  </section>
  <!-- This section controls the persistence for ADO.NET -->
  <section xsi:type="AdoPersistenceConfigurationSection"
           fuzzyTotal="false"
           readWriteConnectionString="TEST_CONNECTION"
           readOnlyConnectionString="TEST_CONNECTION"
           traceSql="false"
           providerType="sqlite"
           staOnly="false"
           autoUpdateExisting="true"
           autoInsertChildren="true"
           prepareStatements="true">
    <!-- Any corrective handlers should be added here
    <corrections>
      <add>value</add>
    </corrections>
    To limit the resources that can be persisted in ADO.NET add them here
    <resources>
      <add>value</add>
    </resources>
    -->
    <validation unique="loose" scope="loose" format="loose" checkDigit="loose" authority="loose"/>

  </section>
  <section xsi:type="ApplicationServiceContextConfigurationSection" allowUnsignedAssemblies="true" threadPoolSize="4">
    <serviceProviders>
      <add type="SanteDB.Core.Security.SHA256PasswordHashingService,SanteDB.Core.Api" />
      <add type="SanteDB.Core.Security.DefaultPolicyDecisionService, SanteDB.Core.Api" />
      <add type="SanteDB.Caching.Memory.MemoryCacheService, SanteDB.Caching.Memory" />
      <add type="SanteDB.Caching.Memory.MemoryQueryPersistenceService, SanteDB.Caching.Memory" />
      <add type="SanteDB.Core.Services.Impl.DefaultThreadPoolService, SanteDB.Core.Api" />
      <add type="SanteDB.Core.Services.Impl.Repository.LocalRepositoryFactory,SanteDB.Core.Api" />
      <add type="SanteDB.Persistence.Data.Services.AdoApplicationIdentityProvider, SanteDB.Persistence.Data" />
      <add type="SanteDB.Persistence.Data.Services.AdoDeviceIdentityProvider, SanteDB.Persistence.Data" />
      <add type="SanteDB.Persistence.Data.Services.AdoIdentityProvider, SanteDB.Persistence.Data" />
      <add type="SanteDB.Persistence.Data.Services.AdoCertificateIdentityProvider, SanteDB.Persistence.Data" />
      <add type="SanteDB.Persistence.Data.Services.AdoPolicyInformationService, SanteDB.Persistence.Data" />
      <add type="SanteDB.Persistence.Data.Services.AdoRoleProvider, SanteDB.Persistence.Data" />
      <add type="SanteDB.Persistence.Data.Services.AdoSecurityChallengeProvider, SanteDB.Persistence.Data" />
      <add type="SanteDB.Persistence.Data.Services.AdoSessionProvider, SanteDB.Persistence.Data" />
      <add type="SanteDB.Persistence.Data.Services.AdoPersistenceService, SanteDB.Persistence.Data" />
      <add type="SanteDB.Persistence.Data.Services.AdoPersistenceService, SanteDB.Persistence.Data" />
      <add type="SanteDB.Core.Security.Privacy.DataPolicyFilterService, SanteDB.Core.Api" />
      <add type="SanteDB.Persistence.MDM.Services.MdmDataManagementService, SanteDB.Persistence.MDM" />
    </serviceProviders>
  </section>
  
  <section xsi:type="AuditAccountabilityConfigurationSection" completeAuditTrail="false">
    <filters>
      <add outcome="fail.minor fail.major fail.epic" insert="true" ship="true" />
      <add action="c r u d" insert="true" ship="true" />
      <add action="x" event="network security restrictedFn" outcome="ok" insert="false" ship="false" />
    </filters>
  </section>
</SanteDBConfiguration>